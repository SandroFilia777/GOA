#1
# შექმენით პროგრამა, რომელსაც გადასცემთ სიას, სადაც გექნებათ მთელი რიცხვები. თქვენი დავალებაა, რომ ამ სიის ორი მინიმალური რიცხვის ჯამი დააბრუნოთ: ([5, 8, 12, 18, 22]), 13), ([7, 15, 12, 18, 22]), 19), ([25, 42, 12, 18, 22]), 30)

# number_list = [7, 15, 12, 18, 22]

# number_list.sort() # sort() ფუნქცია დაალაგებს სიას ზრდადობით

# print(number_list[0] + number_list[1])

#2
# შექმენით პროგრამა რომელსაც გადასცემთ მთელი რიცხვების სიას. შემდეგ უნდა მოახდინოთ გაფილტვრა: ახალ სიაში გადაიტანოთ მარტო ლუწი რიცხვები. ბოლოს კი დააბრუნოთ ახალი სია. test cases: [1, 2, 3, 4] -> [2, 4]



number_list = [1, 2, 3, 4]
even_numbers = []

for number in number_list:
    if number % 2 == 0:
        even_numbers.append(number)

print(even_numbers)


#3
# შექმენით პროგრამა, სადაც გადმოგეცემათ სიები და თქვენ მოახდენთ ფილტრაციას. თუ პირველ და მეორე სიაში ერთი და იგივე ინდექსზე მყოფი ელემენტი იგივე იქნება, მთვლელს დაამატეთ 4 ქულა. თუ რომელიმე ელემენტი იქნება "" - ანუ ცარიელი სთრინგი, მთვლელი არ შეცვალოთ. ხოლო თუ გექნებათ განსხვავებული ელემენტები, მთვლელს გამოაკელით ერთი ქულა. იმუშავეთ შემდეგ სიებზე:

# ["a", "a", "b", "b"], ["a", "c", "b", "d"]
# ["a", "a", "c", "b"], ["a", "a", "b",  ""]
# ["a", "a", "b", "c"], ["a", "a", "b", "c"]
# ["b", "c", "b", "a"], ["",  "a", "a", "c"]

# test cases:
# ["a", "a", "b", "b"], ["a", "c", "b", "d"]) → 6
# ["a", "a", "c", "b"], ["a", "a", "b",  ""]) → 7
# ["a", "a", "b", "c"], ["a", "a", "b", "c"]) → 16
# ["b", "c", "b", "a"], ["",  "a", "a", "c"]) → 0




a = ["b", "c", "b", "a"]
b = ["",  "a", "a", "c"]

score = 0

for index in range(len(a)):
    if a[index] == b[index]:
        score = score + 4
    elif a[index] == "" or b[index] == "":
        score = score + 0
    else:
        score = score - 1

print(score)






#4
#  შექმენით პროგრამა, სადაც მოახდენთ სიაზე მუშაობას. თქვენ გადმოგეცემათ ერთი სია, დავალება კი შემდეგია: უნდა დაითვალოთ ლუწ ინდექსებზე მყოფი რიცხვების ჯამი, ასევე კენტ ინდექსებზე მყოფი რიცხვების ჯამი. საბოლოოდ ორივე დაამატოთ ახალ სიაში და დააბრუნოთ ეს სია. გამოიყენეთ შემდეგი სიები:
# [80]
# [100,50]
# [50,60,70,80]
# [13,27,49]
# [70,58,75,34,91]

# Test cases:

# [80] -> [80,0]
# [100,50] -> [100,50]
# [50,60,70,80] -> [120,140]
# [13,27,49] -> [62,27]
# [70,58,75,34,91] -> [236,92] 